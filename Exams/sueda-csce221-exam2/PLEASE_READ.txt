There are a couple things that should be discussed, but the most important thing is make commands.

Commands for running locally:
 make -C tests run-all           - Run all tests (stops when a test fails)
 make -C tests run-all -k        - Run all tests (runs all tests, even if some fail)
 make -C tests run/<test_name>   - Run a specific test_name
    * Replace <test_name> with the name of the test case in the tests/tests folder
      without the .cpp


For simplicity and your convenience, assume the following definition for FlowerNode:

    class FlowerNode {
        double color;
        ListNode* next;

        // Parameterized Constructor
        FlowerNode(double c=-1, FlowerNode* n=nullptr) : color{c}, next{n} {}

        // Copy Constructor
        FlowerNode(const FlowerNode& other) : color{other.color}, next{other.next} {}

        // Next function, returns a reference to the pointer stored at _next member
        FlowerNode*& next() {
            return _next;
        }
    };

The actual files have different definitions, but this is once again for giving partial credit for
correct program behavior. As such, certain features have been put into place so that you can use
FlowerNode as if it had the above definition (Looking into the actual files will likely be more
confusing then just using the above definition).
